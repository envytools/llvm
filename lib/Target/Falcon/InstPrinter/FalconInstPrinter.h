//===-- FalconInstPrinter.h - Convert Falcon MCInst to asm syntax -*- C++ -*--//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a Falcon MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_FALCON_INSTPRINTER_FALCONINSTPRINTER_H
#define LLVM_LIB_TARGET_FALCON_INSTPRINTER_FALCONINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class FalconInstPrinter : public MCInstPrinter {
public:
  FalconInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                 const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
                 const MCSubtargetInfo &STI) override;
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                    const char *Modifier = nullptr);

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);

private:
  void printPCRelOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printS8ImmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printU8ImmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printS16ImmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printU16ImmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printU32ImmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printMemReg(const MCInst *MI, int OpNum, raw_ostream &O);
  void printMemRegReg(const MCInst *MI, int OpNum, raw_ostream &O);
  void printMemRegImm(const MCInst *MI, int OpNum, raw_ostream &O);
  void printMemSpReg(const MCInst *MI, int OpNum, raw_ostream &O);
  void printMemSpImm(const MCInst *MI, int OpNum, raw_ostream &O);
};
}

#endif
